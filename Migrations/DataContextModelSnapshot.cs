// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SeniorWebAPIProjectV3.DBContext;

namespace SeniorWebAPIProjectV3.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SeniorWebAPIProjectV3.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<double>("latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("longitude")
                        .HasColumnType("double precision");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("SeniorWebAPIProjectV3.Models.Swap", b =>
                {
                    b.Property<string>("swapID")
                        .HasColumnType("text");

                    b.Property<bool>("isAccepted")
                        .HasColumnType("boolean");

                    b.Property<bool>("isContinue")
                        .HasColumnType("boolean");

                    b.Property<bool>("isDone")
                        .HasColumnType("boolean");

                    b.Property<string>("receiverUserID")
                        .HasColumnType("text");

                    b.Property<string>("receiverUserName")
                        .HasColumnType("text");

                    b.Property<string>("receiverUserPhotoUrl")
                        .HasColumnType("text");

                    b.Property<string>("senderUserID")
                        .HasColumnType("text");

                    b.Property<string>("senderUserName")
                        .HasColumnType("text");

                    b.Property<string>("senderUserPhotoUrl")
                        .HasColumnType("text");

                    b.Property<int?>("swapAddressAddressId")
                        .HasColumnType("integer");

                    b.Property<int>("swapRate")
                        .HasColumnType("integer");

                    b.HasKey("swapID");

                    b.HasIndex("swapAddressAddressId");

                    b.ToTable("Swaps");
                });

            modelBuilder.Entity("SeniorWebAPIProjectV3.Models.User", b =>
                {
                    b.Property<string>("userID")
                        .HasColumnType("text");

                    b.Property<int?>("AddressId")
                        .HasColumnType("integer");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .HasColumnType("text");

                    b.Property<string>("gender")
                        .HasColumnType("text");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("lastName")
                        .HasColumnType("text");

                    b.Property<string>("profilePhotoURL")
                        .HasColumnType("text");

                    b.Property<List<string>>("userAbilities")
                        .HasColumnType("text[]");

                    b.Property<List<string>>("userFancies")
                        .HasColumnType("text[]");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("userID");

                    b.HasIndex("AddressId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SeniorWebAPIProjectV3.Models.Swap", b =>
                {
                    b.HasOne("SeniorWebAPIProjectV3.Models.Address", "swapAddress")
                        .WithMany()
                        .HasForeignKey("swapAddressAddressId");
                });

            modelBuilder.Entity("SeniorWebAPIProjectV3.Models.User", b =>
                {
                    b.HasOne("SeniorWebAPIProjectV3.Models.Address", "address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });
#pragma warning restore 612, 618
        }
    }
}
